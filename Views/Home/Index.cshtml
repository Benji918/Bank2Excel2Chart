@{
    ViewData["Title"] = "Home Page";
}

<!-- Include Bootstrap CSS -->
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-M0vT6MkA4e5h6q4G8QzZhU6oO3r8FTFlp9g7EgyoVzOrOgCJ3YHRcRz2DOPG6pCc"
      crossorigin="anonymous" />

<style>
    /* Center container styling */
    .upload-container {
        max-width: 500px;
        margin: 80px auto;
        text-align: center;
        padding: 40px;
        border: 2px dashed #007bff;
        border-radius: 10px;
        background: #f8f9fa;
    }

    /* Custom upload button style */
    .upload-btn {
        background-color: #007bff;
        color: #fff;
        border: none;
        padding: 12px 25px;
        font-size: 16px;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .upload-btn:hover {
        background-color: #0056b3;
    }

    /* Progress bar container */
    .progress {
        margin-top: 20px;
        height: 25px;
        display: none;
    }

    /* Container for the custom file input */
    .file-upload-wrapper {
        position: relative;
        display: inline-block;
    }

    /* Styled button that triggers the file upload */
    .file-upload-btn {
        border: 2px solid #007bff;
        background-color: #fff;
        color: #007bff;
        padding: 10px 20px;
        font-size: 16px;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease, color 0.3s ease;
    }

        .file-upload-btn:hover {
            background-color: #007bff;
            color: #fff;
        }

    /* Hide the native file input */
    .file-upload-input {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        opacity: 0;
        cursor: pointer;
    }

    /* Display selected file name */
    .file-name {
        margin-top: 10px;
        font-style: italic;
        color: #555;
    }

    /* PDF preview container styling */
    #pdfPreviewContainer {
        margin-top: 20px;
        text-align: center;
    }

    #pdfPreviewCanvas {
        width: 100%;
        max-width: 600px;
        border: 1px solid #ccc;
        border-radius: 4px;
    }
</style>

<div class="upload-container">
    <h1 class="mb-4">Upload Your Image</h1>
    <form id="uploadForm" asp-action="UploadImage" asp-controller="Home" enctype="multipart/form-data">
        <div class="form-group">
            <div class="file-upload-wrapper">
                <button type="button" class="file-upload-btn">Select PDF file</button>
                <input type="file" class="file-upload-input" id="fileInput" accept="application/pdf" required />
            </div>
            <div id="fileName" class="file-name">No file selected</div>
        </div>
        <button type="submit" class="upload-btn">Upload</button>

        <!-- PDF Preview Section -->
        <div id="pdfPreviewContainer" style="display:none;">
            <canvas id="pdfPreviewCanvas"></canvas>
        </div>
    </form>

    <!-- Progress bar -->
    <div class="progress mt-4">
        <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar"
             style="width: 0%" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
    </div>

    <!-- Upload status message -->
    <div id="uploadStatus" class="mt-3"></div>
</div>
@section Scripts {

    <!-- Include pdf.js library -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.11.338/pdf.min.js"></script>

    <script>
          // When the file input changes, update the file name and render the PDF preview
        document.getElementById('fileInput').addEventListener('change', function(e) {
            var file = e.target.files[0];
            if (!file) return;

            // Update displayed file name
            document.getElementById('fileName').textContent = file.name;

            // Create a FileReader to read the PDF file as an ArrayBuffer
            var fileReader = new FileReader();
            fileReader.onload = function() {
                var typedarray = new Uint8Array(this.result);

                // Load the PDF using pdf.js
                pdfjsLib.getDocument(typedarray).promise.then(function(pdf) {
                    // Get the first page
                    pdf.getPage(1).then(function(page) {
                        var scale = 1.5; // Adjust scale as needed
                        var viewport = page.getViewport({ scale: scale });
                        var canvas = document.getElementById('pdfPreviewCanvas');
                        var context = canvas.getContext('2d');

                        // Set canvas dimensions to match the PDF viewport
                        canvas.height = viewport.height;
                        canvas.width = viewport.width;

                        // Prepare rendering context
                        var renderContext = {
                            canvasContext: context,
                            viewport: viewport
                        };

                        // Render the PDF page into the canvas
                        page.render(renderContext).promise.then(function() {
                            // Once rendering is complete, display the preview container
                            document.getElementById('pdfPreviewContainer').style.display = 'block';
                        });
                    });
                }).catch(function(error) {
                    console.error('Error rendering PDF:', error);
                });
            };

            // Read the file as an ArrayBuffer
            fileReader.readAsArrayBuffer(file);
        });

        $(function () {
            $('#uploadForm').on('submit', function (e) {
                e.preventDefault();

                var fileInput = $('#fileInput')[0];
                if (fileInput.files.length === 0) {
                    alert("Please select an image to upload.");
                    return;
                }

                var formData = new FormData();
                formData.append('file', fileInput.files[0]);

                // Show the progress bar and reset it
                $('.progress').show();
                var progressBar = $('.progress-bar');
                progressBar.css('width', '0%').attr('aria-valuenow', 0);

                // For demonstration purposes, simulate progress
                var progress = 0;
                var fakeInterval = setInterval(function () {
                    progress += 10;
                    if (progress > 100) progress = 100;
                    progressBar.css('width', progress + '%').attr('aria-valuenow', progress);
                    if (progress === 100) {
                        clearInterval(fakeInterval);
                    }
                }, 200);

                // Simulate an AJAX file upload
                        $.ajax({
            url: '/Home/UploadImage',
            type: 'POST',
            data: formData,
            contentType: false,
            processData: false,
            xhrFields: {
                responseType: 'blob' // Important for binary responses
            },
            success: function(data, status, xhr) {
                // Hide progress bar
                $('.progress').hide();

                // Create download link
                var filename = xhr.getResponseHeader('Content-Disposition')
                                .split('filename=')[1]
                                .replace(/"/g, '');

                var blob = new Blob([data], {type: xhr.getResponseHeader('Content-Type')});
                var link = document.createElement('a');
                link.href = window.URL.createObjectURL(blob);
                link.download = filename;
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);

                $('#uploadStatus').html('<div class="alert alert-success">Conversion successful! Download started.</div>');
            },
            error: function(xhr) {
                $('.progress').hide();
                $('#uploadStatus').html(`<div class="alert alert-danger">Error: ${xhr.responseText || 'Unknown error'}</div>`);
            }
        });
            });
        });
    </script>
}